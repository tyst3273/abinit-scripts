#!/usr/bin/env python3

import numpy as np
import sys 
import os
import matplotlib.pyplot as plt

if len(sys.argv) != 2:
    print('\nERROR: must provide an ABINIT _FATBANDS_ file\n')
    exit()
else:
    infile = sys.argv[1]
if not os.path.exists(infile):
    print('\nERROR: file \'{}\' not found\n'.format(infile))
    exit()

kptno, energy, fat = np.loadtxt(infile,comments=['#','@','&'],unpack=True)
nkpt = len(np.unique(kptno))
nbnd = len(kptno)//nkpt
xvals = np.arange(0,nkpt)

fat = fat*1

### creat a figure, set its size
fig, ax = plt.subplots()
fig.set_size_inches(6,5,forward=True)
fig.tight_layout(pad=2.5)

plt.plot(xvals,np.zeros(nkpt),lw=1,color=(0.25,0.25,0.25),ls=':')
for i in range(nbnd):
    ax.errorbar(xvals,energy[i*nkpt:(i+1)*nkpt],fat[i*nkpt:(i+1)*nkpt],ecolor='r',
            elinewidth=1,lw=2,ls='-',color='k')

# configure the plot
for axis in ['top','bottom','left','right']:
  ax.spines[axis].set_linewidth(1.1)

ax.set_ylim(-5,5)
ax.set_xlim(0,nkpt)

#ax.set_xticks(np.linspace(-1,1,9))

ax.minorticks_on()
ax.tick_params(which='both', width=1, labelsize='x-large')
ax.tick_params(which='major', length=5)
ax.tick_params(which='minor', length=3, color='k')

#ax.set_ylabel(r'y=$x^2$',labelpad=-2.0,fontweight='normal',fontsize='x-large')
#ax.set_xlabel('x',labelpad=1.0,fontweight='normal',fontsize='x-large')

#ax.legend(frameon=False,prop={'size':'large'})
#fig.suptitle('matplotlib example',y=0.97,fontsize='x-large')

#plt.savefig('example.png',format='png',dpi=300,bbox_inches='tight')

plt.show()

