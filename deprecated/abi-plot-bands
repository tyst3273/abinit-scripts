#!/usr/bin/env python3

import numpy as np
import sys 
import os
import matplotlib.pyplot as plt

### usage : ./abi-plot-bands filename [fermi-energy]

erange = 5
efermi = 0.24082 # hartree

hartree2eV = 27.2114

if len(sys.argv) == 2:
    fname = sys.argv[1]
elif len(sys.argv) > 2:
    fname = sys.argv[1]
    efermi = float(sys.argv[2])
else: 
    fname = 'abi_o_DS2_EIG'


txt = open(fname,'r').readlines()
nlines = len(txt)

bands = []
nkpts = -1
nbnds = -1
spin = False
for i in range(nlines):
    tmp = txt[i].strip().split()
    if len(tmp) == 0:
        continue
    elif tmp[0] == 'Eigenvalues':
        if spin == False:
            if 'SPIN' in tmp:
                spin = True
        if nkpts != -1:
            continue
        else:
            nkpts = int(tmp[tmp.index('nkpt=')+1])
            print('\n\tNKPTS = {}\n'.format(nkpts))
    elif tmp[0] == 'kpt#':
        if nbnds != -1:
            continue
        else:
            for word in tmp:
                if word[:5] == 'nband':
                    nbnds = int(word[(word.index('=')+1):].strip(','))
                else:
                    continue
        print('\n\tNBNDS = {}\n'.format(nbnds))
    else:
        bands.extend(tmp)


if spin == True and nkpts*nbnds*2 != len(bands):
    print('\n\t!!!!! Ruh-roh: The number of spin-polarized eigenvales is wrong !!!!!\n')
    exit()
elif spin != True and nkpts*nbnds != len(bands):
    print('\n\t!!!!! Ruh-roh: The number of eigenvales is wrong !!!!!\n')
    exit()

bands = np.array(bands).astype(float)
if spin == True:
    up = bands[:len(bands)//2].reshape(nkpts,nbnds)-efermi
    down = bands[len(bands)//2:].reshape(nkpts,nbnds)-efermi
    up = up*hartree2eV
    down = down*hartree2eV
else:
    bands = bands.reshape(nkpts,nbnds)-efermi
    bands = bands*hartree2eV

xvals = np.arange(0,nkpts)

### creat a figure, set its size
fig, ax = plt.subplots()
fig.set_size_inches(6,5,forward=True)
fig.tight_layout(pad=2.5)
plt.plot(xvals,np.zeros(nkpts),lw=1,color=(0.25,0.25,0.25),ls=':')

if spin == True:
    for i in range(nbnds):
        if  i == 0:
            ax.plot(xvals,up[:,i],lw=1.5,ls='--',color='r',marker='o',
                    ms=0,mfc='k',label='spin-up')
            ax.plot(xvals,down[:,i],lw=1.5,ls='-',color='b',marker='o',
                    ms=0,mfc='k',label='spin-down')
        else:
            ax.plot(xvals,up[:,i],lw=1.5,ls='--',color='r',marker='o',ms=0,mfc='k')
            ax.plot(xvals,down[:,i],lw=1.5,ls='-',color='b',marker='o',ms=0,mfc='k')

else:
    for i in range(nbnds):
        ax.plot(xvals,bands[:,i],lw=1.5,ls='-',color='k',marker='o',ms=0,mfc='k')


# configure the plot
for axis in ['top','bottom','left','right']:
  ax.spines[axis].set_linewidth(1.1)

ax.set_ylim(-erange,erange)
ax.set_xlim(0,nkpts)

#ax.set_xticks(np.linspace(-1,1,9))

ax.minorticks_on()
ax.tick_params(which='both', width=1, labelsize='x-large')
ax.tick_params(which='major', length=5)
ax.tick_params(which='minor', length=3, color='k')

ax.set_ylabel('eV',labelpad=-2.0,fontweight='normal',fontsize='x-large')
#ax.set_xlabel('x',labelpad=1.0,fontweight='normal',fontsize='x-large')

if spin == True:
    ax.legend(frameon=False,prop={'size':'large'})

#fig.suptitle('matplotlib example',y=0.97,fontsize='x-large')
#plt.savefig('example.png',format='png',dpi=300,bbox_inches='tight')

plt.show()


